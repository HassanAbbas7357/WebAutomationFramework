{"uid":"919fd1e58c877c2e","name":"test_TemporaryWorkerAdd","fullName":"Tests.test_temprory_worker#test_TemporaryWorkerAdd","historyId":"58429ae5f9e707f85b850ae2181b686f","time":{"start":1681965548583,"stop":1681965566944,"duration":18361},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.121)\nStacktrace:\n#0 0x557fc4312fe3 <unknown>\n#1 0x557fc4051d36 <unknown>\n#2 0x557fc4055283 <unknown>\n#3 0x557fc4054ff2 <unknown>\n#4 0x557fc405530c <unknown>\n#5 0x557fc4088c9e <unknown>\n#6 0x557fc40af8c2 <unknown>\n#7 0x557fc4083943 <unknown>\n#8 0x557fc40afa8e <unknown>\n#9 0x557fc40c8232 <unknown>\n#10 0x557fc40af693 <unknown>\n#11 0x557fc408203a <unknown>\n#12 0x557fc408317e <unknown>\n#13 0x557fc42d4dbd <unknown>\n#14 0x557fc42d8c6c <unknown>\n#15 0x557fc42e24b0 <unknown>\n#16 0x557fc42d9d63 <unknown>\n#17 0x557fc42acc35 <unknown>\n#18 0x557fc42fd138 <unknown>\n#19 0x557fc42fd2c7 <unknown>\n#20 0x557fc430b093 <unknown>\n#21 0x7ff8b4b4ab43 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83024ac907d158cfe189cdee813f3a25\")>\n\n    @allure.feature(\"Temporary Worker Feature\")\n    @allure.story(\"Add new temporary worker\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.regression\n    @pytest.mark.sanity\n    @flaky\n    def test_TemporaryWorkerAdd(driver):\n        global Email\n        VisitTemporary_WorkerPageWithSteps(driver)\n        populate_Bike()\n        populate_Car()\n        with allure.step('Then User fills \"All\" form data on \"Temporary Worker\" screen'):\n            fillUserPersonalData(driver)\n            fillEmployeeStatus(driver)\n            fillClientAndProjectInfo(driver)\n            fillResidenceInfo(driver)\n>           fillTransportInfo(driver)\n\nTests/test_temprory_worker.py:253: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests/test_temprory_worker.py:172: in fillTransportInfo\n    TW.BikeNameOrLicencePlate = find_Elements_byXpathAndWait_getText(BikeNameList_xpath, driver)[0]\nbase_helpers.py:106: in find_Elements_byXpathAndWait_getText\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\nbase_helpers.py:106: in <genexpr>\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa172e9fad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\\\n#19 0x557fc42fd2c7 \\\\u003Cunknown>\\\\n#20 0x557fc430b093 \\\\u003Cunknown>\\\\n#21 0x7ff8b4b4ab43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=112.0.5615.121)\nE       Stacktrace:\nE       #0 0x557fc4312fe3 <unknown>\nE       #1 0x557fc4051d36 <unknown>\nE       #2 0x557fc4055283 <unknown>\nE       #3 0x557fc4054ff2 <unknown>\nE       #4 0x557fc405530c <unknown>\nE       #5 0x557fc4088c9e <unknown>\nE       #6 0x557fc40af8c2 <unknown>\nE       #7 0x557fc4083943 <unknown>\nE       #8 0x557fc40afa8e <unknown>\nE       #9 0x557fc40c8232 <unknown>\nE       #10 0x557fc40af693 <unknown>\nE       #11 0x557fc408203a <unknown>\nE       #12 0x557fc408317e <unknown>\nE       #13 0x557fc42d4dbd <unknown>\nE       #14 0x557fc42d8c6c <unknown>\nE       #15 0x557fc42e24b0 <unknown>\nE       #16 0x557fc42d9d63 <unknown>\nE       #17 0x557fc42acc35 <unknown>\nE       #18 0x557fc42fd138 <unknown>\nE       #19 0x557fc42fd2c7 <unknown>\nE       #20 0x557fc430b093 <unknown>\nE       #21 0x7ff8b4b4ab43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1681965547594,"stop":1681965548582,"duration":988},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.121)\nStacktrace:\n#0 0x557fc4312fe3 <unknown>\n#1 0x557fc4051d36 <unknown>\n#2 0x557fc4055283 <unknown>\n#3 0x557fc4054ff2 <unknown>\n#4 0x557fc405530c <unknown>\n#5 0x557fc4088c9e <unknown>\n#6 0x557fc40af8c2 <unknown>\n#7 0x557fc4083943 <unknown>\n#8 0x557fc40afa8e <unknown>\n#9 0x557fc40c8232 <unknown>\n#10 0x557fc40af693 <unknown>\n#11 0x557fc408203a <unknown>\n#12 0x557fc408317e <unknown>\n#13 0x557fc42d4dbd <unknown>\n#14 0x557fc42d8c6c <unknown>\n#15 0x557fc42e24b0 <unknown>\n#16 0x557fc42d9d63 <unknown>\n#17 0x557fc42acc35 <unknown>\n#18 0x557fc42fd138 <unknown>\n#19 0x557fc42fd2c7 <unknown>\n#20 0x557fc430b093 <unknown>\n#21 0x7ff8b4b4ab43 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83024ac907d158cfe189cdee813f3a25\")>\n\n    @allure.feature(\"Temporary Worker Feature\")\n    @allure.story(\"Add new temporary worker\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.regression\n    @pytest.mark.sanity\n    @flaky\n    def test_TemporaryWorkerAdd(driver):\n        global Email\n        VisitTemporary_WorkerPageWithSteps(driver)\n        populate_Bike()\n        populate_Car()\n        with allure.step('Then User fills \"All\" form data on \"Temporary Worker\" screen'):\n            fillUserPersonalData(driver)\n            fillEmployeeStatus(driver)\n            fillClientAndProjectInfo(driver)\n            fillResidenceInfo(driver)\n>           fillTransportInfo(driver)\n\nTests/test_temprory_worker.py:253: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests/test_temprory_worker.py:172: in fillTransportInfo\n    TW.BikeNameOrLicencePlate = find_Elements_byXpathAndWait_getText(BikeNameList_xpath, driver)[0]\nbase_helpers.py:106: in find_Elements_byXpathAndWait_getText\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\nbase_helpers.py:106: in <genexpr>\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa172e9fad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...\\\\n#19 0x557fc42fd2c7 \\\\u003Cunknown>\\\\n#20 0x557fc430b093 \\\\u003Cunknown>\\\\n#21 0x7ff8b4b4ab43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=112.0.5615.121)\nE       Stacktrace:\nE       #0 0x557fc4312fe3 <unknown>\nE       #1 0x557fc4051d36 <unknown>\nE       #2 0x557fc4055283 <unknown>\nE       #3 0x557fc4054ff2 <unknown>\nE       #4 0x557fc405530c <unknown>\nE       #5 0x557fc4088c9e <unknown>\nE       #6 0x557fc40af8c2 <unknown>\nE       #7 0x557fc4083943 <unknown>\nE       #8 0x557fc40afa8e <unknown>\nE       #9 0x557fc40c8232 <unknown>\nE       #10 0x557fc40af693 <unknown>\nE       #11 0x557fc408203a <unknown>\nE       #12 0x557fc408317e <unknown>\nE       #13 0x557fc42d4dbd <unknown>\nE       #14 0x557fc42d8c6c <unknown>\nE       #15 0x557fc42e24b0 <unknown>\nE       #16 0x557fc42d9d63 <unknown>\nE       #17 0x557fc42acc35 <unknown>\nE       #18 0x557fc42fd138 <unknown>\nE       #19 0x557fc42fd2c7 <unknown>\nE       #20 0x557fc430b093 <unknown>\nE       #21 0x7ff8b4b4ab43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Given Go to the \"Base\" url","time":{"start":1681965548583,"stop":1681965549335,"duration":752},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then Verify user is on Login screen","time":{"start":1681965549335,"stop":1681965549411,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When User fills \"Valid\" form data on \"login\" screen","time":{"start":1681965549411,"stop":1681965550238,"duration":827},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then Verify user is on \"HomePage\" screen","time":{"start":1681965550238,"stop":1681965550930,"duration":692},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then User clicks \"Temporary Worker\" button on \"Homepage\" screen","time":{"start":1681965550930,"stop":1681965551076,"duration":146},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then Scroll \"Down\" into view \"Add New Temporary Worker\" Section","time":{"start":1681965551076,"stop":1681965551214,"duration":138},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then User clicks \"Add Temporary Worker\" button on \"Temporary Worker\" screen","time":{"start":1681965551214,"stop":1681965551580,"duration":366},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then Verify user is on \"Add Temporary Worker\" screen","time":{"start":1681965551580,"stop":1681965551591,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then User fills \"All\" form data on \"Temporary Worker\" screen","time":{"start":1681965554312,"stop":1681965566943,"duration":12631},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.121)\nStacktrace:\n#0 0x557fc4312fe3 <unknown>\n#1 0x557fc4051d36 <unknown>\n#2 0x557fc4055283 <unknown>\n#3 0x557fc4054ff2 <unknown>\n#4 0x557fc405530c <unknown>\n#5 0x557fc4088c9e <unknown>\n#6 0x557fc40af8c2 <unknown>\n#7 0x557fc4083943 <unknown>\n#8 0x557fc40afa8e <unknown>\n#9 0x557fc40c8232 <unknown>\n#10 0x557fc40af693 <unknown>\n#11 0x557fc408203a <unknown>\n#12 0x557fc408317e <unknown>\n#13 0x557fc42d4dbd <unknown>\n#14 0x557fc42d8c6c <unknown>\n#15 0x557fc42e24b0 <unknown>\n#16 0x557fc42d9d63 <unknown>\n#17 0x557fc42acc35 <unknown>\n#18 0x557fc42fd138 <unknown>\n#19 0x557fc42fd2c7 <unknown>\n#20 0x557fc430b093 <unknown>\n#21 0x7ff8b4b4ab43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/Tests/test_temprory_worker.py\", line 253, in test_TemporaryWorkerAdd\n    fillTransportInfo(driver)\n  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/Tests/test_temprory_worker.py\", line 172, in fillTransportInfo\n    TW.BikeNameOrLicencePlate = find_Elements_byXpathAndWait_getText(BikeNameList_xpath, driver)[0]\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/base_helpers.py\", line 106, in find_Elements_byXpathAndWait_getText\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/base_helpers.py\", line 106, in <genexpr>\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\n                 ^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 404, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Enter Personal Data","time":{"start":1681965554312,"stop":1681965556831,"duration":2519},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Employee Status","time":{"start":1681965556831,"stop":1681965557708,"duration":877},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Client & Project Information","time":{"start":1681965557708,"stop":1681965561554,"duration":3846},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Residence Information","time":{"start":1681965561554,"stop":1681965563740,"duration":2186},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Enter Transport Information","time":{"start":1681965563740,"stop":1681965566942,"duration":3202},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=112.0.5615.121)\nStacktrace:\n#0 0x557fc4312fe3 <unknown>\n#1 0x557fc4051d36 <unknown>\n#2 0x557fc4055283 <unknown>\n#3 0x557fc4054ff2 <unknown>\n#4 0x557fc405530c <unknown>\n#5 0x557fc4088c9e <unknown>\n#6 0x557fc40af8c2 <unknown>\n#7 0x557fc4083943 <unknown>\n#8 0x557fc40afa8e <unknown>\n#9 0x557fc40c8232 <unknown>\n#10 0x557fc40af693 <unknown>\n#11 0x557fc408203a <unknown>\n#12 0x557fc408317e <unknown>\n#13 0x557fc42d4dbd <unknown>\n#14 0x557fc42d8c6c <unknown>\n#15 0x557fc42e24b0 <unknown>\n#16 0x557fc42d9d63 <unknown>\n#17 0x557fc42acc35 <unknown>\n#18 0x557fc42fd138 <unknown>\n#19 0x557fc42fd2c7 <unknown>\n#20 0x557fc430b093 <unknown>\n#21 0x7ff8b4b4ab43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/Tests/test_temprory_worker.py\", line 172, in fillTransportInfo\n    TW.BikeNameOrLicencePlate = find_Elements_byXpathAndWait_getText(BikeNameList_xpath, driver)[0]\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/base_helpers.py\", line 106, in find_Elements_byXpathAndWait_getText\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/base_helpers.py\", line 106, in <genexpr>\n    return list((i.text for i in find_Elements_byXpathAndWait(xpath, driver)))\n                 ^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 404, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"5a096facb9097fd9","name":"screenshot","source":"5a096facb9097fd9.png","type":"image/png","size":118584},{"uid":"6bb7a606312ba276","name":"stdout","source":"6bb7a606312ba276.txt","type":"text/plain","size":10736}],"parameters":[],"stepsCount":14,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1681965567199,"stop":1681965567284,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Temporary Worker Feature"},{"name":"story","value":"Add new temporary worker"},{"name":"tag","value":"sanity"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_temprory_worker"},{"name":"host","value":"fv-az210-747"},{"name":"thread","value":"2282-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_temprory_worker"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["regression","sanity"]},"source":"919fd1e58c877c2e.json","parameterValues":[]}