{"uid":"3620f94edc01745f","name":"test_TemporaryWorkerDeleteFirst","fullName":"Tests.test_temprory_worker#test_TemporaryWorkerDeleteFirst","historyId":"76bf1ced30384bfa00e4db05de3f1d23","time":{"start":1681968047901,"stop":1681968064837,"duration":16936},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn ant-btn-default ant-btn-dangerous\">...</button> is not clickable at point (1700, 561). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap\">...</div>\n  (Session info: chrome=112.0.5615.49)\nStacktrace:\n#0 0x55f0196d2fe3 <unknown>\n#1 0x55f019411d36 <unknown>\n#2 0x55f019455aef <unknown>\n#3 0x55f019453a31 <unknown>\n#4 0x55f0194512de <unknown>\n#5 0x55f019450358 <unknown>\n#6 0x55f0194440c5 <unknown>\n#7 0x55f01946f8c2 <unknown>\n#8 0x55f019443943 <unknown>\n#9 0x55f01946fa8e <unknown>\n#10 0x55f019488232 <unknown>\n#11 0x55f01946f693 <unknown>\n#12 0x55f01944203a <unknown>\n#13 0x55f01944317e <unknown>\n#14 0x55f019694dbd <unknown>\n#15 0x55f019698c6c <unknown>\n#16 0x55f0196a24b0 <unknown>\n#17 0x55f019699d63 <unknown>\n#18 0x55f01966cc35 <unknown>\n#19 0x55f0196bd138 <unknown>\n#20 0x55f0196bd2c7 <unknown>\n#21 0x55f0196cb093 <unknown>\n#22 0x7fa92a4d2b43 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c0fa4fbd87444ac1b8dc7a861cb54a2\")>\n\n    @allure.feature(\"Temporary Worker Feature\")\n    @allure.story(\"Delete Last Temporary worker\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.regression\n    @pytest.mark.sanity\n    @pytest.mark.order(2)\n    def test_TemporaryWorkerDeleteFirst(driver):\n        VisitTemporaryWorkerPageWithLogin(driver)\n        scroll_into_element(mainTemporaryTable_xpath, driver)\n        verify_loaderAndWait(TableLoader_xpath, driver)\n        with allure.step('And User select the First Item and Tap on Delete Button'):\n            find_byXpath(mainRowRadioButton, driver).click()\n            find_byXpath(mainDeleteButton, driver).click()\n>           find_byXpathAndWait(mainDeleteYesButton, driver).click()\n\nTests/test_temprory_worker.py:316: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf6f5a9d10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f0196bd2c7 \\\\u003Cunknown>\\\\n#21 0x55f0196cb093 \\\\u003Cunknown>\\\\n#22 0x7fa92a4d2b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn ant-btn-default ant-btn-dangerous\">...</button> is not clickable at point (1700, 561). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap\">...</div>\nE         (Session info: chrome=112.0.5615.49)\nE       Stacktrace:\nE       #0 0x55f0196d2fe3 <unknown>\nE       #1 0x55f019411d36 <unknown>\nE       #2 0x55f019455aef <unknown>\nE       #3 0x55f019453a31 <unknown>\nE       #4 0x55f0194512de <unknown>\nE       #5 0x55f019450358 <unknown>\nE       #6 0x55f0194440c5 <unknown>\nE       #7 0x55f01946f8c2 <unknown>\nE       #8 0x55f019443943 <unknown>\nE       #9 0x55f01946fa8e <unknown>\nE       #10 0x55f019488232 <unknown>\nE       #11 0x55f01946f693 <unknown>\nE       #12 0x55f01944203a <unknown>\nE       #13 0x55f01944317e <unknown>\nE       #14 0x55f019694dbd <unknown>\nE       #15 0x55f019698c6c <unknown>\nE       #16 0x55f0196a24b0 <unknown>\nE       #17 0x55f019699d63 <unknown>\nE       #18 0x55f01966cc35 <unknown>\nE       #19 0x55f0196bd138 <unknown>\nE       #20 0x55f0196bd2c7 <unknown>\nE       #21 0x55f0196cb093 <unknown>\nE       #22 0x7fa92a4d2b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1681968046943,"stop":1681968047901,"duration":958},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn ant-btn-default ant-btn-dangerous\">...</button> is not clickable at point (1700, 561). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap\">...</div>\n  (Session info: chrome=112.0.5615.49)\nStacktrace:\n#0 0x55f0196d2fe3 <unknown>\n#1 0x55f019411d36 <unknown>\n#2 0x55f019455aef <unknown>\n#3 0x55f019453a31 <unknown>\n#4 0x55f0194512de <unknown>\n#5 0x55f019450358 <unknown>\n#6 0x55f0194440c5 <unknown>\n#7 0x55f01946f8c2 <unknown>\n#8 0x55f019443943 <unknown>\n#9 0x55f01946fa8e <unknown>\n#10 0x55f019488232 <unknown>\n#11 0x55f01946f693 <unknown>\n#12 0x55f01944203a <unknown>\n#13 0x55f01944317e <unknown>\n#14 0x55f019694dbd <unknown>\n#15 0x55f019698c6c <unknown>\n#16 0x55f0196a24b0 <unknown>\n#17 0x55f019699d63 <unknown>\n#18 0x55f01966cc35 <unknown>\n#19 0x55f0196bd138 <unknown>\n#20 0x55f0196bd2c7 <unknown>\n#21 0x55f0196cb093 <unknown>\n#22 0x7fa92a4d2b43 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3c0fa4fbd87444ac1b8dc7a861cb54a2\")>\n\n    @allure.feature(\"Temporary Worker Feature\")\n    @allure.story(\"Delete Last Temporary worker\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.regression\n    @pytest.mark.sanity\n    @pytest.mark.order(2)\n    def test_TemporaryWorkerDeleteFirst(driver):\n        VisitTemporaryWorkerPageWithLogin(driver)\n        scroll_into_element(mainTemporaryTable_xpath, driver)\n        verify_loaderAndWait(TableLoader_xpath, driver)\n        with allure.step('And User select the First Item and Tap on Delete Button'):\n            find_byXpath(mainRowRadioButton, driver).click()\n            find_byXpath(mainDeleteButton, driver).click()\n>           find_byXpathAndWait(mainDeleteYesButton, driver).click()\n\nTests/test_temprory_worker.py:316: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbf6f5a9d10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f0196bd2c7 \\\\u003Cunknown>\\\\n#21 0x55f0196cb093 \\\\u003Cunknown>\\\\n#22 0x7fa92a4d2b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn ant-btn-default ant-btn-dangerous\">...</button> is not clickable at point (1700, 561). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap\">...</div>\nE         (Session info: chrome=112.0.5615.49)\nE       Stacktrace:\nE       #0 0x55f0196d2fe3 <unknown>\nE       #1 0x55f019411d36 <unknown>\nE       #2 0x55f019455aef <unknown>\nE       #3 0x55f019453a31 <unknown>\nE       #4 0x55f0194512de <unknown>\nE       #5 0x55f019450358 <unknown>\nE       #6 0x55f0194440c5 <unknown>\nE       #7 0x55f01946f8c2 <unknown>\nE       #8 0x55f019443943 <unknown>\nE       #9 0x55f01946fa8e <unknown>\nE       #10 0x55f019488232 <unknown>\nE       #11 0x55f01946f693 <unknown>\nE       #12 0x55f01944203a <unknown>\nE       #13 0x55f01944317e <unknown>\nE       #14 0x55f019694dbd <unknown>\nE       #15 0x55f019698c6c <unknown>\nE       #16 0x55f0196a24b0 <unknown>\nE       #17 0x55f019699d63 <unknown>\nE       #18 0x55f01966cc35 <unknown>\nE       #19 0x55f0196bd138 <unknown>\nE       #20 0x55f0196bd2c7 <unknown>\nE       #21 0x55f0196cb093 <unknown>\nE       #22 0x7fa92a4d2b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Given Go to the \"Base\" url","time":{"start":1681968047901,"stop":1681968048882,"duration":981},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then Verify user is on Login screen","time":{"start":1681968048882,"stop":1681968048937,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When User fills \"Valid\" form data on \"login\" screen","time":{"start":1681968048937,"stop":1681968049562,"duration":625},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then Verify user is on \"HomePage\" screen","time":{"start":1681968049562,"stop":1681968050357,"duration":795},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then User clicks \"Temporary Worker\" button on \"Homepage\" screen","time":{"start":1681968050618,"stop":1681968050899,"duration":281},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"And User select the First Item and Tap on Delete Button","time":{"start":1681968063368,"stop":1681968064836,"duration":1468},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"ant-btn ant-btn-default ant-btn-dangerous\">...</button> is not clickable at point (1700, 561). Other element would receive the click: <div tabindex=\"-1\" class=\"ant-modal-wrap\">...</div>\n  (Session info: chrome=112.0.5615.49)\nStacktrace:\n#0 0x55f0196d2fe3 <unknown>\n#1 0x55f019411d36 <unknown>\n#2 0x55f019455aef <unknown>\n#3 0x55f019453a31 <unknown>\n#4 0x55f0194512de <unknown>\n#5 0x55f019450358 <unknown>\n#6 0x55f0194440c5 <unknown>\n#7 0x55f01946f8c2 <unknown>\n#8 0x55f019443943 <unknown>\n#9 0x55f01946fa8e <unknown>\n#10 0x55f019488232 <unknown>\n#11 0x55f01946f693 <unknown>\n#12 0x55f01944203a <unknown>\n#13 0x55f01944317e <unknown>\n#14 0x55f019694dbd <unknown>\n#15 0x55f019698c6c <unknown>\n#16 0x55f0196a24b0 <unknown>\n#17 0x55f019699d63 <unknown>\n#18 0x55f01966cc35 <unknown>\n#19 0x55f0196bd138 <unknown>\n#20 0x55f0196bd2c7 <unknown>\n#21 0x55f0196cb093 <unknown>\n#22 0x7fa92a4d2b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/WebAutomationTestingFramework/WebAutomationTestingFramework/Tests/test_temprory_worker.py\", line 316, in test_TemporaryWorkerDeleteFirst\n    find_byXpathAndWait(mainDeleteYesButton, driver).click()\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 404, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"dec440d4aea7f9e9","name":"screenshot","source":"dec440d4aea7f9e9.png","type":"image/png","size":202905}],"parameters":[],"stepsCount":6,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1681968065147,"stop":1681968065262,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Temporary Worker Feature"},{"name":"story","value":"Delete Last Temporary worker"},{"name":"tag","value":"order(2)"},{"name":"tag","value":"sanity"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_temprory_worker"},{"name":"host","value":"fv-az1241-419"},{"name":"thread","value":"2347-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_temprory_worker"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["order(2)","regression","sanity"]},"source":"3620f94edc01745f.json","parameterValues":[]}